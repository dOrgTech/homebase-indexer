# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Extra


class Config(BaseModel):
    class Config:
        extra = Extra.forbid

    fixed_proposal_fee_in_token: str
    governance_total_supply: str
    max_quorum_change: str
    max_quorum_threshold: str
    min_quorum_threshold: str
    period: str
    proposal_expired_level: str
    proposal_flush_level: str
    quorum_change: str


class Key(BaseModel):
    class Config:
        extra = Extra.forbid

    owner: str
    delegate: str


class Delegate(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Key
    value: Dict[str, Any]


class Lambdas(BaseModel):
    class Config:
        extra = Extra.forbid

    code: str
    handler_check: str
    is_active: bool


class ExtraModel(BaseModel):
    class Config:
        extra = Extra.forbid

    handler_storage: Dict[str, str]
    lambdas: Dict[str, Lambdas]


class FreezeHistory(BaseModel):
    class Config:
        extra = Extra.forbid

    current_stage_num: str
    current_unstaked: str
    past_unstaked: str
    staked: str


class GovernanceToken(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    token_id: str


class Key1(BaseModel):
    class Config:
        extra = Extra.forbid

    bytes: str
    bool: bool


class MapItem(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Key1
    value: str


class OngoingProposalsDlistItem(BaseModel):
    class Config:
        extra = Extra.forbid

    first: str
    last: str
    map: List[MapItem]


class Proposals(BaseModel):
    class Config:
        extra = Extra.forbid

    downvotes: str
    metadata: str
    proposer: str
    proposer_frozen_token: str
    quorum_threshold: str
    start_level: str
    upvotes: str
    voting_stage_num: str


class QuorumThresholdAtCycle(BaseModel):
    class Config:
        extra = Extra.forbid

    last_updated_cycle: str
    quorum_threshold: str
    staked: str


class Key2(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    bytes: str


class StakedVote(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Key2
    value: str


class RegistryStorage(BaseModel):
    class Config:
        extra = Extra.forbid

    admin: str
    config: Config
    delegates: List[Delegate]
    extra: ExtraModel
    freeze_history: Dict[str, FreezeHistory]
    frozen_token_id: str
    frozen_total_supply: str
    governance_token: GovernanceToken
    guardian: str
    metadata: Dict[str, str]
    ongoing_proposals_dlist: Optional[OngoingProposalsDlistItem]
    pending_owner: str
    permits_counter: str
    proposals: Dict[str, Proposals]
    quorum_threshold_at_cycle: QuorumThresholdAtCycle
    staked_votes: List[StakedVote]
    start_level: str
